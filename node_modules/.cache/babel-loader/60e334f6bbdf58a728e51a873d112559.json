{"ast":null,"code":"var _jsxFileName = \"/home/rz/Documentos/Personal/react-web-movies/src/components/HomeGrid/HomeGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport { get } from \"../../utils/HttpClient\";\nimport { useEffect, useState } from \"react\";\nimport { MovieCard } from \"../MovieCards/MovieCards\";\nimport styles from \"./HomeGrid.module.css\";\nimport { Loading } from \"../loading/Loading\";\nimport { useQuery } from \"../../hooks/useQuey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function HomeGrid() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(2);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    setIsLoading(true);\n    const searchURl = search ? \"/search/movie?query=\" + search + \"&page=\" + page : \"/discover/movie?page=1,2\";\n    get(searchURl).then(data => {\n      setMovies(prevMovies => prevMovies.concat(data.results));\n      setHasMore(data.page < data.total_pages);\n      setIsLoading(false);\n    });\n  }, [search, page]); // useEffect(()=>{\n  //     setIsLoading(true);\n  //     const searchURl = search \n  //     ? \"/search/movie?query=\" + search\n  //     : \"/discover/movie\";\n  //     get(searchURl).then((data) =>{\n  //         setMovies(data.results);\n  //         setIsLoading(false)\n  //     });\n  // }, [search]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.divContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.title,\n      children: \"Discover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.SubTitle,\n      children: \"There will always be more to enjoy!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.MoviesContainer,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeGrid, \"meUEYGBRboMvaRZA8u3LSg4X2X4=\", false, function () {\n  return [useQuery];\n});\n\n_c = HomeGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGrid\");","map":{"version":3,"sources":["/home/rz/Documentos/Personal/react-web-movies/src/components/HomeGrid/HomeGrid.jsx"],"names":["get","useEffect","useState","MovieCard","styles","Loading","useQuery","HomeGrid","movies","setMovies","page","setPage","hasMore","setHasMore","isLoading","setIsLoading","query","search","searchURl","then","data","prevMovies","concat","results","total_pages","divContainer","title","SubTitle","MoviesContainer","map","movie","id"],"mappings":";;;AAAA,SAAQA,GAAR,QAAkB,wBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,OAAO,SAASC,QAAT,GAAqB;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AAGA,QAAMc,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAMW,MAAM,GAAGD,KAAK,CAAChB,GAAN,CAAU,QAAV,CAAf;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMG,SAAS,GAAGD,MAAM,GACtB,yBAAyBA,MAAzB,GAAmC,QAAnC,GAA8CP,IADxB,GAEtB,0BAFF;AAGAV,IAAAA,GAAG,CAACkB,SAAD,CAAH,CAAeC,IAAf,CAAqBC,IAAD,IAAS;AACzBX,MAAAA,SAAS,CAACY,UAAU,IAAIA,UAAU,CAACC,MAAX,CAAkBF,IAAI,CAACG,OAAvB,CAAf,CAAT;AACAV,MAAAA,UAAU,CAACO,IAAI,CAACV,IAAL,GAAYU,IAAI,CAACI,WAAlB,CAAV;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJD;AAKH,GAVQ,EAUN,CAACE,MAAD,EAASP,IAAT,CAVM,CAAT,CAXwB,CAuBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAII,SAAJ,EAAc;AACV,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAEI;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACqB,YAAvB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAErB,MAAM,CAACsB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAEtB,MAAM,CAACuB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAEvB,MAAM,CAACwB,eAAtB;AAAA,gBACKpB,MAAM,CAACqB,GAAP,CAAYC,KAAD,iBAAW,QAAC,SAAD;AAA0B,QAAA,KAAK,EAAEA;AAAjC,SAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cAAtB;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH;;GAjDexB,Q;UAQED,Q;;;KARFC,Q","sourcesContent":["import {get} from \"../../utils/HttpClient\"\nimport { useEffect, useState } from \"react\";\nimport { MovieCard } from \"../MovieCards/MovieCards\"\nimport styles from \"./HomeGrid.module.css\"\nimport { Loading } from \"../loading/Loading\";\nimport { useQuery } from \"../../hooks/useQuey\";\n\nexport function HomeGrid () {\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(2);\n    const [hasMore, setHasMore] = useState(true);\n\n    const [isLoading, setIsLoading] = useState(true);   \n    \n    \n    const query = useQuery();\n    const search = query.get(\"search\"); \n    \n    useEffect(()=>{\n        setIsLoading(true);\n        const searchURl = search \n        ? \"/search/movie?query=\" + search +  \"&page=\" + page\n        : \"/discover/movie?page=1,2\";\n        get(searchURl).then((data) =>{\n            setMovies(prevMovies => prevMovies.concat(data.results) );\n            setHasMore(data.page < data.total_pages)\n            setIsLoading(false)\n        });\n    }, [search, page]);\n\n    // useEffect(()=>{\n    //     setIsLoading(true);\n    //     const searchURl = search \n    //     ? \"/search/movie?query=\" + search\n    //     : \"/discover/movie\";\n    //     get(searchURl).then((data) =>{\n    //         setMovies(data.results);\n    //         setIsLoading(false)\n    //     });\n         \n    // }, [search]);\n    \n    if (isLoading){\n        return <Loading></Loading>;\n    }\n    \n    return(\n        \n        <div className={styles.divContainer}>\n            <h3 className={styles.title}>Discover</h3>\n            <p className={styles.SubTitle}>There will always be more to enjoy!</p>\n            <ul className={styles.MoviesContainer}> \n                {movies.map((movie) => <MovieCard key={movie.id} movie={movie}></MovieCard>)}\n            </ul>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}