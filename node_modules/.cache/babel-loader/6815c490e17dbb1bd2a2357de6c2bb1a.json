{"ast":null,"code":"var _jsxFileName = \"/home/ruzon/Documentos/rework/ReactJs-Web-Movies/src/pages/TvInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport { Loading } from \"../components/Loading\";\nimport { get } from \"../utils/HttpClient\";\nimport style from \"./MoviesInfo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TvInfo() {\n  _s();\n\n  const {\n    tvId\n  } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [tv, setTv] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    get(\"/tv/\" + tvId).then(data => {\n      setTv(data);\n      setIsLoading(false);\n    });\n  }, [tvId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  const imgUrl = tv.poster_path ? \"https://image.tmdb.org/t/p/w500\" + tv.poster_path : null;\n  const imgUrlB = tv.backdrop_path ? \"https://image.tmdb.org/t/p/w500\" + tv.backdrop_path : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.detailsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: style.img,\n      src: imgUrl,\n      alt: tv.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: style.imgBackdrop,\n      src: imgUrlB,\n      alt: tv.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.info,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.p,\n        children: tv.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.data,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: tv.last_air_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tv.genres.map(genres => genres.name).join(\",   \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.description,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: tv.tagline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tv.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TvInfo, \"Rw7uCBoTBpVhzc1S9MmWeN//Pe0=\", false, function () {\n  return [useParams];\n});\n\n_c = TvInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TvInfo\");","map":{"version":3,"sources":["/home/ruzon/Documentos/rework/ReactJs-Web-Movies/src/pages/TvInfo.jsx"],"names":["useParams","useEffect","useState","Loading","get","style","TvInfo","tvId","isLoading","setIsLoading","tv","setTv","then","data","imgUrl","poster_path","imgUrlB","backdrop_path","detailsContainer","img","title","imgBackdrop","info","p","name","last_air_date","genres","map","join","description","tagline","overview"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,6BAApC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,GAAT,QAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAGA,OAAO,SAASC,MAAT,GAAmB;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAWP,SAAS,EAA1B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,EAAD,EAAKC,KAAL,IAAcT,QAAQ,CAAC,IAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAL,IAAAA,GAAG,CAAC,SAASG,IAAV,CAAH,CAAmBK,IAAnB,CAAwBC,IAAI,IAAI;AAC5BF,MAAAA,KAAK,CAACE,IAAD,CAAL;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD;AAIH,GAPQ,EAON,CAACF,IAAD,CAPM,CAAT;;AASA,MAAIC,SAAJ,EAAc;AACV,wBACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAID,QAAMM,MAAM,GAAGJ,EAAE,CAACK,WAAH,GAAiB,oCAAoCL,EAAE,CAACK,WAAxD,GAAqE,IAApF;AACA,QAAMC,OAAO,GAAGN,EAAE,CAACO,aAAH,GAAmB,oCAAoCP,EAAE,CAACO,aAA1D,GAAyE,IAAzF;AAEJ,sBAGI;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACa,gBAAtB;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEb,KAAK,CAACc,GAAtB;AAA2B,MAAA,GAAG,EAAEL,MAAhC;AAAwC,MAAA,GAAG,EAAEJ,EAAE,CAACU;AAAhD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAEf,KAAK,CAACgB,WAAtB;AAAmC,MAAA,GAAG,EAAEL,OAAxC;AAAiD,MAAA,GAAG,EAAEN,EAAE,CAACU;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,SAAS,EAAEf,KAAK,CAACiB,IAAtB;AAAA,8BAEA;AAAG,QAAA,SAAS,EAAEjB,KAAK,CAACkB,CAApB;AAAA,kBAAwBb,EAAE,CAACc;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFA,eAEoC;AAAA;AAAA;AAAA;AAAA,cAFpC,eAGQ;AAAK,QAAA,SAAS,EAAEnB,KAAK,CAACQ,IAAtB;AAAA,gCAEA;AAAA,oBAAIH,EAAE,CAACe;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,oBAAIf,EAAE,CAACgB,MAAH,CAAUC,GAAV,CAAcD,MAAM,IAAIA,MAAM,CAACF,IAA/B,EAAqCI,IAArC,CAA0C,MAA1C;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,eAUQ;AAAK,QAAA,SAAS,EAAEvB,KAAK,CAACwB,WAAtB;AAAA,gCACI;AAAA,oBAAInB,EAAE,CAACoB;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBACCpB,EAAE,CAACqB;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AA2BC;;GApDezB,M;UACKN,S;;;KADLM,M","sourcesContent":["import { useParams } from \"react-router\";\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport { Loading } from \"../components/Loading\";\nimport { get } from \"../utils/HttpClient\";\nimport style from \"./MoviesInfo.module.css\"\n\n\nexport function TvInfo () {\n    const { tvId } = useParams()\n    const [isLoading, setIsLoading] = useState(true)\n    const [tv, setTv] = useState(null);\n    \n    useEffect(() => {\n        setIsLoading(true);\n\n        get(\"/tv/\" + tvId).then(data => {\n            setTv(data);\n            setIsLoading(false)\n        })\n    }, [tvId]);\n\n    if (isLoading){\n        return(\n            <Loading></Loading>\n        );\n    }\n\n    \n\n    const imgUrl = tv.poster_path ? \"https://image.tmdb.org/t/p/w500\" + tv.poster_path: null;\n    const imgUrlB = tv.backdrop_path ? \"https://image.tmdb.org/t/p/w500\" + tv.backdrop_path: null\n\nreturn(\n      \n    \n    <div className={style.detailsContainer}>\n    <img className={style.img} src={imgUrl} alt={tv.title} />\n    <img className={style.imgBackdrop} src={imgUrlB} alt={tv.title} />\n    <div className={style.info}>\n       \n    <p className={style.p}>{tv.name}</p><br />\n            <div className={style.data}>\n            \n            <p>{tv.last_air_date}</p>\n            <p>{tv.genres.map(genres => genres.name).join(\",   \")}</p> \n            </div>\n            \n            \n            <div className={style.description}>\n                <p>{tv.tagline}</p>\n                <p>\n                {tv.overview}\n                </p>\n                \n            </div>\n\n    </div>\n    </div>\n  );  \n}"]},"metadata":{},"sourceType":"module"}